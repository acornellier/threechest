import type { SampleRoute } from '../../util/types.ts'
import { type DungeonKey, dungeonKeys } from '../dungeonKeys.ts'
import { decodeRoute } from '../../../server/decodeRoute'
import { mdtRouteToRoute } from '../../util/mdtUtil.ts'
import { getDirname } from '../../../server/files.ts'
import fs from 'fs'
import * as path from 'path'

type SampleRouteDefinition = Omit<SampleRoute, 'route'> & {
  mdt: string
  name?: string
}

const sampleRouteDefinitions: Record<DungeonKey, SampleRouteDefinition[]> = {
  ak: [
    {
      mdt: 'dyJ0iaakHKQBPuL2Lqknme5yOwMkpdPPHW1KKTjW3ukJtuoNeTqHIEOqQAIsOAJikYjfkmtHe1oHFkKedvOuhvijTuHKYtfzQQARcjYxLqP9sdwc5WcHfRuvpwsnzHQUSI2Ss(mIsJwibNwiA1cj0RfsXSf0Truu7wc(TcdxivwUO65iQMUuxxPY2fk57sOy8kvX5ruy)cvw23ueXh)OquAMtEKJcIksbMkMii7igf3uQVOAbY37EhM65EAtFe1nzenKhxrjoUII9oYgxrKP8iNfIpKmmvpch5XoIWz3Zyuyn8nvpch5XoIWz3Zye)EeeMIyxpI(r4ipYcK1yABAxKXBAgruRy5GysEupwXYuSIiC303u9U88zHoTB)WzSMHc2u9U88zHo27cdfSPEojZrwGSUVP6D55ZcDX3vGSZrHye)Eemtnr(mCw3rok4lybBBk62fgsUVG9fSVGf0kXjobvqdeecQOsq3ebIkXMGqKjceLc(emjbtsWSO0wC(cweioXMGkYSfe(cweioXMGkobHGqujQSfz(2MQhHJCtRfDUw2IZxW(cwqpXjOKeubLfeIBtujUmrG4cSfNVGfxP4euscQGYccb9SfuFblcSfe(2MQhHJCt05AvoTfuFb7lyXrioXvjOIJkiexPT48TfuFblQSfB(cwW2MQhHJCtRfDsN2ccFb7BlO(2InFBt1JWrUj6SCUw2IkFb7lyXDItCKeuXX2IZxWcAG4e0mbvq3eeIBtujUmrG4cSfuFblYSfe(cwCeItCubvCKeecU02u9iCKBATw7tN2IaFb7lybNjobVjOcUuqi4aBX5lybNjobxAli8fSGdeNGjeubxjiem12u9iCKBIoxl60wS5loFblosItCSGkUZ2u9iCKBATOZYPiWxWc22wK5loFblUkXjocbvCuBb1xWccBbHVGfCM4e8MTOYxWc22u9iCKBIoxR1Ywu6l4nFblyBt1JWrUP1QCF60wWK8fSVGfucBrMVGfN4eubvWccbHOsujcebInXMTO0xWcwCIZwWK8fSGTfm7lybBBQEeoYnrN05Azly2xK5lyrM4emjbvukiemlQe8jcemHytWurMGRSnvpch5MIGxl6uWSVGfNTGpFblyBrPVGfv22c(8fz(cwCKeN4ieuXXccXDIkXrTnvpch5Mwl6CTe85lyb1wWK8fSGAlk9fSiW2wWuFt1JWrUj6CTkNcMKVGfBIteylk9fSytCImbvuABlycFt1JWrUP1IoPtrMVTGj5lyrMTGpFblceNyZ2wWv(cM9fSiWwK5lyXTjoXLjOIRsqiUsrL4cebckjBt1JWrUj6SCUw2coW3u9iCKBATw7tNcoZxWc2wWL(cwW22cEZxWe(cwqioblOItqiQevcQTGd8fSGqCcQGkobHGTfm1xWc22u9iCKBIoxl60wWz(cQVTGW3wK5BlyQVGfBItKzlycFbl2eNitqfLccbtsujcSfCGVGfCP4eCMGkosccXXIkXDIabVj2eCGTP6r4i30ArNLtBbx6los(cwW2MQhHJCt05ATw22MYJC1rL1I8ztUVG9TTTnvmZz0iytXh5Afz9UWMmemjtJ9JIZ6MCFb7BkEFbl2UYOnGGi7ObBKkPItSxIllAljY4msLebbNGkybHXuuzkkVJ8oUIIUDHHXvehxrDuywiUIgfIROOV42MkymTTTva',
    },
  ],
  cot: [
    {
      mdt: 'dCJDiaakrQOzjb4wckXUKGyyQuhdzzO6zOmnbUMc2Mk8nvPXjiNtLSqfcpucutufP2Oiv6JckLtQq0mLGQDc)uckdvqXtfAQkDvrQQTkOKgReK2lnybvhwvyXIKESenzrkxwrBwuFwHKtRkA1IuHxRIOzRQUTkc7wc9BjnCjqoUGs1YfXZvrnDPUUc12La67IuLXRIKZRqQ9lsSKRXhPLwTyyDMC(zTOy4(Wy69yu1rEAJe9OWk0tueJWyppvBCFu2J(KNtj8iLs4Hj9dBPeE6M8CwmT)Onww)1KW84p7EoYI5QRXY6VMeMh)z3ZrM2PebgFmURfC9xtEwCuocBJJFMMXul0cpmPF6mSNU7joPXc8XF801y54KKzXooo1)SaNFbzSCCsYSyhMX)VGBSNZt8S4OmvJLJtsMf7tpU4OM1IJmTtjikW455Fw2pRfDfKGBBSGg))NDfKRGCfKyWwWDfKyWwWCTfbUcsq2c62vqcMGl4cMGSnww)1eJ5mBMZ2cURGCfKGeCXRTG7kiXRTGUDfKG4cUGibtqmrGiKyqq3IdXLTXY6VMyKnZ5RPTG5kixbjOxBb3vqcIBlyUcsCylOBxbjcEfCrWHGjcgSnww)1eJ5mBYM2Iaxb5kibfsWf0LTG7kibXSfmxbjETf0TRGebHeCrWLGjgUTnww)1eJS51mNTfdUcMRGed2IaxbjgSf0TRGemUGlymbtWVebcwGyqWUfhc2G4vWirib7qCjyHe0Ti4wqKiGeexeWfeteeiOab7sqdIaMGoeSxBJL1FnXyoNtLnTfhUglR)AIr2mNztbD5kibzBlEDfdUcsq2glR)AIXCMnVM2IqUIdxbjiBJL1FnXiBMZ5ST4Yv86kibzlc5kibzBSS(RjgZ5RuztXHRGeCBBbD7kiYvqcYw86kib32yz9xtmYMSzoloCfKGzBliYvC4kirGT41vqcMTiKRGeCBbrUcsWTnww)1eJpOCMnTfe3vWjxbjiBb)2vqcY2yz9xtmMZSzoBliMRXY6VMyKnZ5RPGp4kibzliURGeKGl4cMiqeiy22ckW1yz9xtmMZSjBkc5kirGGly2c(GRGeCBbXDfKGoeCb9kyckKiqqd22cAW1yz9xtmYMxZCwWpCfK4qWfd2c(GRGeb2cI7kib)wWfCsWeCUiqqx22c6W1yz9xtmMZ5uztbXCfKGSf0TRTG4UcsWpeCbpqWe8brGGZSTf0RRGcCfKGeCbxWemBbD4kibj4cUTGgCfKGBBSS(RjgzZCMnTfuixJL1FnXyoZMxtXLRGe0TGlEfmbjceCXGiqCicjEfxIqIbXL4W2wqxUcoZvqcY2yz9xtmYM5ColiURTTGF7kOaxbjcj4IxbteicedIbXHTGgCfKGzBSS(RjgZ5RuztBbNCf0RRGeKTXY6VMyKnzZC2wW5UglR)AIXhuoZMckKRGeKTTGZCfKRTG7AlyU2co3vqcYwWFDTfe312yz9xtmMZSzol4hU2c621wWdCfKGSTTnM8m3fwoFE2NDfKRTTTX0BopPGmM2ZC(z54FpAbDBSMA6yw2NDfKRX0CfKGrHkKRq09lJyb3dcUiSqduHCqhHybVH4dCbtqIahHyWyHp(CNs45NjN7ucVGg))fqkHZlMwkHNA985ciLWRftj8c(02gl6iSTTva',
    },
  ],
  db: [
    {
      mdt: 'd4JrpaGiQemkQKQofvsLzrqr3Ik2LkgMk1XiTmqpdLPrPRbvBJiFdPghfDoeCqeQIfsuEibvnrQe6IiuvTreQuFKGkDsecZKGsTtLFIqvAOieDuck4PQAQO6QeuOTIqf9veQkJfHkzVYGHYHvjwmb5XuOjtuDzKSzQ6ZujA0qKttLA1euXRrinBcDBvsTBc8BenCvsoocvy5q45uW0bUoe12jOKVJqz8uj58ujL9dPtJ3FrUCsbeNuim4Muqd)2SNyxCjjr4I9eHmIlHTlk8cxIHupGYvGE(fJaxJOgqXEffJifgfUOye3iCtjqUOR1BKuKebrErKcaOicbEY49gjfjrqKxePaakIqURA2(lidifEsrseUf4YKfOhz3Y7VfoeFqkHbJe)gCfXrVW6IiYuX7nImceucapYcjsjSOeBAVrKrGGsaGirwuSr3dOOU2TaxMq9grgbckbaxezbUKIuari3vnv1EduIugbUjfeVPn6a9xHSOOH4nnEtJ30M2GnyJ1ybAW4nTbBWMgOXI30MgO3iPijIEVNr59bAW4nnEtB2any8M2ybAS4bA24nTPb6nsksIONr59eOc0yXBA8M2WBWMuGglEtBWa9gjfjr079mkgvGMnEtJ30gDd2md0GXBAZgOHhVPnnqVrsrse9mkcuEFGgE8MgVPncbAW4bA24nTbd0WJ30gmqtkEGMz8an9oEGEJKIKi69EVqmQanP4nfpEtBAGEJKIKi6zuEpJkqJoEtkEtBmPan64bAMXBAtnd0074nTbnBWgKUXAqPa9gjfjr079mkcubAMXBA8any8an84bAsXBAJoqJoEtBkSbBQgOzgVPn8an9oEtBsnyJoqt14b6nsksIONr59EFGgH4nP4nTP2an64nTXi0GnMzGMz8M207an9oEtBqcbAkmEGEJKIKi69EccXOc0074nfgpqZmEGMYI30MgO3iPijIEgfJY7BQgpqJoEGMEhpqtkEGanvJ3WJhOjfpqJoEtBQud2S3bAMXBAtBWgmqJq8an9oEGEJKIKi6VOEpJkqtHXBA8anP4bA0Xd0mJhOP3XBAtBWgmqt14nTPb6nsksIO37zuEFGMYI3mJ30glqVrsrse9mkVNavJoEtB4bA6D8M2ybAkmEGan1gVPS4b6nsksIO37zumQMcJ30MgiqtXJ3uP4nTPbA4Xd0BKuKerpJIaL3hOPsXBQnEtBAGEJKIKi69EVqmQanLoEtkEGgD8anZ4bAkD8M20an9oEGEJKIKi6zuEpJkqGEeU9aIxV3afWq8MgpqGa9eJIIOnTxUBV3TrKfbUwtV7jfs4qzeyiEtJ3lpEtBSgSPhTXAAZMSgEV379EFtQ5y2OtwGEX4nTNzXpMnyVdeEF0gRNzHhyZ27aH2JudVNzHhytQ3bcThPgDpZEFSnZEhie)qiqGgmEV84nTXAWME0gRPnBYA49EV379nPMdDJozb6fJ30EM9(yBWEhOs4i1y9mREmB2Ehi0E0gEpZQhZMuVdeApAJUNzTh8MzVdekDSbc0yX7LhVPnwd20J2ynTztwdV379EVVj1CmB0jlqVy8M2ZyshBd27aHMhTX6zm2XSz7DGm25UH3ZySJztQ3bYyN7gDpJDFGnZEhiJ(G3i0Zy3hytV7DGm6dEt1EgK(Onf27aT6Hqtz9mi9rBQT3bA1dHMI3ZGWJutL6DGwPdHMs3ZGWJutn7DGwPdHMsONPeo4n4DVdexp2gu7zkHdEdc7DG46X2GSEMIFUBqBVdeh)yBq8EMIFUBqPEhio(X2G09mf)C3GM9oqC8JzGanB8E5XBAJ1Gn9OnwtB2K1W79EV37BsnhZgDYc0lgVP9mLDGnyVdexpMnwptzhyZ27aXLo0n8EMYoWMuVdex6q3O7zk9HUz27aXPpAJqptPp0n9U3bItF0MQ9m18i1uyVdex6adeOHhVxE8M2ui8ibnnzwOKP1SbBoQf)yPvcmAlneYASM2SjRH3l8xeGIHSbkumasuOye7IOikgsuiOqXaKOygaKxHIbqIcfdCrarrXiQasJevOlgjkkMhb51OyaKCBaf7A3cCJIjePbdb6fKSanP49YJ30gdN(GdPTeiWUnBWMJkDFiyAsGGjTPK1SXAAZMSgEVmkIDbbfkgajkumHinyaf7QlaeKIOyedjkbOyYjDlWLOyxHSOikMQb6fKSan649YJ30gRbB6rBSM2SjRH379EV33KA3n6KfOxmEt7Hw7X2G9owC4H1y9qRE0MT3XIJFKceOzgVxE8M2ynytpAJ10Mnzn8EV379(Mu7UrNSa9IXBAp0EFWBWEhlUEOBSEOLDmB2Ehlo(rkqGgH49YJ30gRbB6rBSM2SjRH379EV33KAoMn6KfOxmEt7Hw4rBWEhloHJTX6Hw4rB2EhRe(X2W7Hw4rBs9owj8JTr3dTWJ2m7DS06bVrOhAHhTP39owA9G3uThAHh6Mc7DS00N7abA6D8E5XBAJ1Gn9OnwtB2K1W79EV37Bsnh6gDYc0lgVP9qM5H1G9owA7b2y9ql7y2S9owAchnqGMQX7LhVPnwd20J2ynTztwdV379EVVj1UB0jlqVy8M2dT6rQb7DS0MhTX6Hw7HqZ27yPHhPabAkmEV84nTbXVpey2Bt29TsqBWMJvsp3wgbR1KbTAJ10Mnzn8EIezrrumasUnGIDTBbUrXeI0GbumsKbOyasIDbHCdOyaKOqXCbx5cOyxFbbrPqGIDrGCuSlUVgfdGefkgjcHqXKtsmbOyaKOqXU6caPa9cswGMYI3lpEtBmlHdJaUKYS0qA8gS5aVzhAckKgsRMqBJ10Mnzn8EIhpGcbkgrDlk6wGlrXUikIIXqXU2Ta3OycrAWaLbHjk2vilkIIbqIcftisdgqXaKOyaKOqXCbx5cOyxFbbrPqGIDrGCuSlUVgfdGefkgjcHmGIjNKycqXairHIHKBrrumxpjcuSRqwuefdqIIbqIcftisaG8AumspkgajkumKClkIIDrGCuSlUVgfJeHqgqXq(kHjkMCQROei3TaxIIrkaftisdgqXU6cabPORlqVGKfOP249YJ30M0T5b)gAAvLa9nSbBowAPJAItqnLKOTSgRPnBYA49cBKnaqXUczrrumffdGeLaumsbOycVlEc0lizbceOa',
    },
  ],
  gb: [
    {
      mdt: 'd0tZmaakfeDkqjzwGsDlvPYUuqnmK4yeldXZi10uORPeBdu9nanoG6CG0cvs1dbLWevLQUiOKAJki1hbfgjOi6KQsPvcksMjOeTtQFckknuvPyPGIINQutfQRQKOARGIWzvsu2RmyuDyfyXaPhdWKrQUSI2SQ6ZiLgnqCAqSALe51kiz2q62kjSBvXVrz4iflhINJKMUkxxvY2bfvFxjLXRGW5vsA9GIu7NKtc3EaD6ShyIjcviSN8cf4TxBaTS3((2WhAWWKRemZZ7G1TV5qCTXdaCRouuv8TO4VzLddfFOrGmFOJUABamugYBgGoVB(2NplCBamugYBgGoVB(w6drES9GxhdwWqziqEOT17A)cc92VabwcRhYv69RdtrGrBy(a0xZWTb8cbz(C7xGIoH5t0S0gWleK5Z9MxOOzI0(MZva5H2aTnGxiiZN79VEODYEEl9HilcPn1j6eWbH9eolzI01MMxOOudNLWzjCwYKmjRZ68yxMeolzsMK1DzD4SKjD5XWzjlDTbWqziT)F98)7YKWzjCwYWZK8sxMeol5XU8y4SKjDTbWqziT1Z)h6SlRdNLWzjdmtYswNb3LjHZswYK8swNH31gadLH0()1t9SlpgolHZsgAMKfkDzs4SKb2L1HZsw31gadLH0wpHo))U8s4SeolzHKjzr6YKWzjlaZKm4SolG7YJHZsw31gadLH0())GQNDz4HZs4SKfDxMeolzODzD4SKLU8y4SKh7AdGHYqARN)VE2LbgolHZswwYKSm2LjHZswOKjzr6YJHZsEPRnagkdP9)RNqNDzWHZKWzjlKmjl6SolJD5XWzjdmtYW7AdGHYqARN)))3LHgUnagkdP9)dfu9ml6WzjlDDzHs4mjCxEjCwYKmjpM1zDxgE4SKjDzOH7AdGHYqARN65)3LfjCMeolzzPRnagkdP9a5)1Zm0WzjdmtYsxxwiHZWdNLSUlVeol5LmjdpRZa7AdGHYqA))65)3LfD4SmgolzPRnagkdPTE()qNDzzmCMeolzbExBamugs7)xp1Zm0WzjdotYq76YYs4m4WzjRZKmPlVeolzHsxBamugsB9e68)ZadNLmPllucNLmPldnCwYcLUUSapCEjCwYcPldmCwY6mjlDzWHZsgyMKH3LHgolzsxBamugs7))dQE2LfGHZad3LbholzOzsgCxwOeolzDxBamugsB98)1ZUSaoCwhUlVeolzzmtYIUldoCwYcLUm0WzjR7YcLWzjlDTbWqziT)F9e6SllqdNbhUlVeolzbEMKLLU2ayOmK265)))zHs4Um0WzjpMj5LUUmHs4SqjCwYJzsEPRnagkdP9)dfu9SltKWzbE4SKLUSSeolzPRnagkdPTEQN)FxMqcNxcNLSaotYcWUmWWzjV0LbholzzmtYcPldnCwYW7AdGHYqApq(F9Slt0HZIeolzsMK1zDEmpMxYlz4z4zGzGzWzWzPRnagkdP9)RN)Fwhol5XUUmzmCwKWzjluYKSqY6SmMhZc88sgAgEwKmWSOZGZYsxBamugsB98)HoZcjCwYsxxMSeols4SKjuYKmzmRZcW8yMi5LSaodptizGzbAgCMO7AdGHYqA))6PEMfs4SKjDDzc8WzrcNLmbyMKjGZ6SMKhZADEjtwYWZeOzGz9ygCMapdnRPKfkzn8Siz9swizT01gadLH0wpHo))SqcNL8yMK1DDzcWWzby4SKLUSqjCxMqjCwYsxBamugs7))dQE211gbY)Gz)FQZJA4SeURRR9AZ5qLL20H8)qa8c9wnluAZaDLMaoQHZs420dNLmb44WeWlaxaocCbCMKFNah(WAGlKrYcyIqY6SKhB98s7HMHO4hitfhu2kafYdTkoYRhyR4VvXrMayRyfZh6koniqyiqoiW0qEOvXbbYDqEOvXHHOHTI)zOOS1M0vCqxvXHbyfhYxXHCuvC2JIFmAuC2xXHbufNHO4WqOaBf)ZqrzRnPR4GUQIddH01(P17YKWTPholzcy9WezKaDrGtzbEMKFNECCyklAGqbcupkaZ6SKhB98s79nPrXzpk(bYuXPJmyOMkoOm6RQ4htXPsZG1Eu8dKPIJxdckeAb5u83pPEiSvNiDTFA9USoCB6HZswdMYWe4ekabsHISaptYVJaCCyWeWlAGlG1JGZ6SKhB98s71NRnazQ4SVIFGmvCqzuPQ40m4qyOkoitKjSvCi0NdqrxvXxL9sXxBWZP4htXPEdqof)azQ4Fi0cYP4qEu8dKPIdGH8mruC2JIFGaHQItfc9PIZ(k(bYuXrG8q7Wk(kJ9sXxXGvv8N5KUIFmfNotXP5fkQIlefFW)Mik(bYuXbLrLQI)HqliNItFsZ8HoKhAvC2JIVgitKPIdYuXHqD4U2pTExEmCB6HZswOmomyWa1WbdvOi6mj)oTqgwde4cze6OaEjRZsES1ZlTHLVOEkonVqrvCrXhsaGmaYJId55ykom0k(AGmFuCiNItZGdHHsvXp2AdqOtvXxL9cwP4hiZhfN9O4WI3pSIddgJUItLg2rvXhGmvCaSvakKhip0Q408cfLQIlIIp4HUIlefFizikUqu8bp0vCzewbBfNMxOOkUSaBfxJqxXbLrLQI)gcSvCAEHIQ4e4kodrXrhq9uCqzuPoCx7NwVRRRa',
    },
  ],
  mot: [
    {
      mdt: 'd0JxlaWjGk0RqvfMLiWTivPDrs6xafdduogLLjQNbyAuPRbsBds(gKACGQZrflKKQhcuLjcbAJOQsFue0ibQuNeO0nbQODk9tsvKHsQQokqf8uQAQOCvuvrBfOs(kqvDwsvu7vnyehMuwmjLhdKjJQCzI2mu9zi0OfrNgeRMufEne0SHYTjj2nj(nHHtQSCu55q00fUUiTDrOVJQQgpPQCEuvwpeW(r6Tz714XtOaUKCiHiuUqH5UN)AikalcUh85FIGlWdHjIaiCFi1xSNPbk4dHiPeVrj6NFMqkHF5Giv4HX3EqcmbN(1WKribRcUy2EqcmbN(1WKriblp9DD3RLgcWtGj4GOG4QFSpfcV9GdMAyWrIPVev03(e1WsLZ2dkLJtQe(u1WKjkXU2EqPCCsLq)Pyyxd((qkvbIcIR2EqPCCsLabtvqukualp9DbS9iLysqbeHYSRDn4h71LIHHC21MDTzx7c)MVOVaxux3l0l0R7Xnp7Ax3JlWSRDHEZx3JR7SRDDp2dsGj42JJdiXXpU5zxGzx7AWU5RZX1D21UWV5l6J9GeycU9asCCh5Xfy2f6SRDbU5R7XEqcmb3ECCajG846o7IE21U2Xf1SRDTJ9GeycU9ashjo(Xf6Sl8zx7MHDZxZ546m74AWMDCnB2X1YZoUgWSJBop74MbMDShKatWThhhxna5Xf1Sl8zx7Aah7bjWeC7bK44aYRzZU21Yhxdy21UohxNzx7c)44IE2Eqcmb3ECCaPJ8cF21UM7nFnOhxd2SRDDpUoZU21544cF2Eqcmb3Eajooo(n7o7Ax7446m7MbMDTlWXf(SRDn4h7bjWeC7XXDudqEnB21UgWX1z21UgSJJRbB21aMDTl6J9GeycU9asajo(1Szx76CZxd2X1YZU21546m7Ax0hhxZMDHp746m7Ax3JRbB21UahxZMDTR7nFboUwE2X1aMDTB(4MbMDCZUZo2dsGj42Rz44aYJRLNDnGzh7bjWeC7XXbK44xZMDCnOZU21oUgSzhxNzhhxdy21Gp7Ax7MVOVaxuhxd9SRDHFZxNJRHA21U5J9GeycU9asCCh51CMDTRDZ38f46EDVqVqVaxuxuhhxZD21Gp7A38nFboUg6zx76EZxGlWf6X1qn7AxGJ9GeycU944asa51CMDTRLV5l8lW156EnyxOxZUOUOpoUg0z3mSzx7A38nFShKatWThq6iXXVg6zx7I(MVOoUgQzhxd(SRDDV5l0JJRHA2ndB2XEqcmb3ECCC1aKxd9SJRHA21UOpUMZSRDZWU5B2Ua3C(6EZUxO3mWf11CoUg8zx7A2XX1qp7AONDTRbCZxlFCnuZU2f1X1Gp7Axd2XEqcmb3EajooG84AWNDZ2SRDTJ9GeycU944ash5XXEoi4HEchhPmqo7AZooo2ZFPeHxBppi44qaLIf8Dny7fQPhsqbYzxB2EEZU2fomyQ6G2fguayOG76EZx9AqbundyaogQSHg9f4Ax3v)cDpljeKucNinKuIgsKPQirsj8jsPKKAjkPenkPsmCWW0s5KkGbCdbXKQisvcnikGbb5sHWdmGBjNAAyqqgusiOeHoPcLejLucYKcUauAqj8ecUJ9kR(XnpBpVzx7IgaMQqnhOgmyzau5B(Q3mmyQIcaWXbnCuozNlW1UUR(f6EWttHssrkPeVMoWawv0XbbPqbmEmPuhLa(AyimbuI(fy8PIGtxskHFqjGvjriitaLWVCsjcarbrkHXPPJs4huc)kHGOcLGGsTizcOeWjefEuIxiIKskrWrjGVghMaecPKeQfskjeucIYGs0PHmOKe6OkLawCkrrk5j5rj8jsPeqAkuIggsbLarjriiPeDI4yVYQFCbMTN3SRDHc4OkuOOYOqJcQR5EZx9AoWu1qbKnyoWZg6lW1UUR(f6EwsjLao1qajLabjLWPPWtOcLi1aLKs4svsaLawWXeLucefDPbLiuKuIorivciAyuIinajursjQLgucFIukrfn(OefPKhLeckrJNEKImOe(ePCuIUummKucMwi5OeikusKusj8svqukuOeEsDsfEquqKsekuceCkHprkLGOmOenkbrHGhLi4Oe104rjQOHaYJ9kR(X1D2EEZU21nJwv0qHdhkmuqZqrFZx9c46QkmuWYOGzUoOHFbU21D1Vq3RNfPucinfkj0qKssO5qjrsorkIjPKijeKuc)1WWOKqqj6sXWOeibLarjeusKusjQjqIKs4ecvo2RS6hxOZ2ZB21Uz4OufaomGmk45m68nF1lGdGQgA0Wm4oUqZ5lW1UUR(f6EWttHssrkPeVMoWawv0XbbPqbmEmPuhLa(AyiKscbLGeHq0rjjm7KakrWrj8jsPeqAkuIMoDy8rjiXe8NsW1WWadMmriHwiPKqqj8js5Oee5eP6OenfEuIEKQIokrGJtjrsjLacdcooLeckjskPemjEqjHGsIKskrNwKKsutIj4VQh7vw9JJJha',
    },
  ],
  nw: [
    {
      mdt: 'dSJvlaakLcvNsuPQzPue3cKYUuvmmvvhtyzaptKPPKRbLTbIVjvgNs15KQoOsrzHQs9qvjyIGKYgbjvFuuPCsqswPsr1mvkK2j6NQsOHQkjpvIPc5QkfPTQuOCwLcXAfvQSxAWsQdlQAXIkESQyYQkDzvSzq9zqIrds1PLswnufETOsMTOCBvjA3qLFRsdhQQLljpxP00vCDPuBxvs9DLcgpufDEOkTFPydrwY)97f3g7uTT1fNe7hILnKhkxOcQzzZXJo8ODwFUdyzo45ybL)zWBU22uxIM6xTP5wtnuVQ1b33m8A55MDREv(SZmhOch8vKLNB2T6v5ZoZCGQV4PCzjF75(c3SBvlCqX3owA36RLEqRfC1g5n32YYRZN1(iYYt7QQdUP0oNSZRpzYWYt7QQdU5vTZYKalZ58Yw4GI5y5PDv1b3a1AJdkNloO6lEktyw2EYoptRlorYqcCSGF7SSTIKHizisgYqcKazsUKlzsIjXCKarYqcKazitYKCj7KyYLeIet2jH4itIKHe4ixIKHmCS8CZUvwGHthyyhjqKmejdjejq2jtYijxYa4itIKHm5ixIKHeibYKJetKJLNB2TYs6ad3FCKjrYqKmKXUeiJohjqKmKXVei3LjzVCjJqIjdGJmjsgsisGeZrUejd5YXYZn7wzbgoDshh5sKmejdz8lbYEzsgHJStKmKHJLNB2TYs60FGHDKyIKHiziJLeidiYKmWCKarYqgljqgjhzsKmK7sGSZXYZn7wzbggoN0XrcrKCxKmKHJLNB2TYs6adNoYiejdz4idGizibsGmCKXVizidhzVizidhhzNijqKmKbejqgDYKmWCKXsKmKHJCxKmKahzKejdz4y55MDRSadNo9hh5UizKejdjqcKjhlp3SBLL0bgggwgHiziboY4xKmKahzaejdzscKlzsI54i7fjJKizixowEUz3klWW95KoYyxKJCxKmKysGeIJSxKmKjjqUCCKXVilp3SBLL0jDGHL7ICKXUizibsGeImj3LlzsIjdje5s2jXK7YohzViziHibsmhhzeIKbqKmKqKazNJmcrYqUKazYXYZn7wzjFadNoY4xKmKjhz0jsgYqcKahhzaejtarowEUz3klWWPdmSm6fjdz44iJKizisgsWVeiJEhjaisgYEjq2jtYLCj3Lysmjejehj4xKmKHJLNB2TYs6ad3FCKXsKmejdjiCKaGizidjqcKjzYrccrYqgosWVizibowEUz3klWWPt64idmrYqKmKGLeibyosqsKmKahjerYqMCKGFrYqUCS8CZUvwsN(dmSJmGisgIKHeaKaji5ibjrYqgosqisgsGJe8lsgYKJLNB2TYcmmCoPJeIizibooYOtKLNB2TYs6adNosaMizidhjyjsgYWXrg7IKGorYqgsGeitYKJearKmKHJLNB2TYcmC60FCKrVijyxKmKHeibYKm5y55MDRSKoWWWWsqVizidhhj4xKmfIKHmCKPFrYqgowEUz3klWW95KoosqisgICKjroYLih5UihzVihzcisgYWXYZn7wzjDshyyhhlvTGNxegE7z2ksgICCCSSHZjxYWY3wWWTEANn4vg)wU5GhNNzRiziYYxrYqcjH9PlwPUal6H0lbsOfG9pyDrQlWGK2xYKmKlFlXSuW)KVQPoCSGZ3osGilFfjdj2A9bSJ1TGSwq6xsGeAlS)pDXc0bzbsq2Ljzix(wIzzZW16L5BQFXQCCSGZ3oYKilFfjdji2)G1fRf4hd03lbsOLa)F()))JaSW(XKjzix(wIzPG)jFvtnWXcoF7ixIS8vKmKPU(pGDSoSfgOF1lbsOTwDFIfy))hGH9hYKmKlFlXS8c5X1uVnxTWVPo3IUM6CWBtn0BdfO0chuAQhOFAQZoWtt9gYNL5ybNVDKyIS8vKmKP)4ZcSJHT67wDqKaj0cW6dyhRBF9VVsyYKmKlFlXSS5TFj(n13xFQAQhO3ABtn(TYYYx1up3M6T5Qf(n15gy5ybNVDKqez5RiziJf2NUyLs9D77ajqcTaR7ZowxaPhY)EhqMKHC5BjMLc(N8vn1jhl48TJStKLVIKHSdK(GT6H0Thb2(scKqdeXN)1Qh0))3TVKjzix(wIzzJ2E70uJF7SSM6OPEJNh33M6hONVfUMA8BNL1udAQZj)tUAQNBtnEVTRAQX)UT106Il3Vjn1B2lZxnqFtAQhOFW1uVbOFWDE9PQPgV32n1q5mn1TMM6CY)KRpn1B62tt9go5X)IBBt9fxtDQ6BtDo3TB)4ybNVDCCua',
    },
  ],
  sob: [
    {
      mdt: 'dStzlaakPQsDkPkKBjvvzxcPmmqCmOLj4zszAaDnPY2urFtigNq15uLoOuLsluQIEOufmrHKCrPkv2OuLQ(OqsnsPQcNuviRuQQKzkvv0or)uibdvvOEQctvPRkvHARsvkgRqcTxAWI4WG0ILQYJvHjdGlROnRQ(SQiJwirNwOSAPQQETQGMnOUTqQ2nG(TknCaYYfLNlQA6sUUOY2bO(UQaJxQsoVQO2ViTORdOaaWfyVzMLp2fOSdsChae7)JDKdUEwIqC8HEuXUaLbh1SxLJf6r98dZNMmW0Kh3JJ60KEFwSjqaGF2XXf(M9yOWZQMpc4)6644cFZEmu4zvZhbqVKGoGMRU9Wf(Mfd4t2tlh5IbGdml0dda3VM9FVT5aWqHZnDDCKllBcSg56dEc4jSeDCKllBcSECoyyjgXrnNrpgWNSphh5YYMaROkhWNMxGpcGEjXxh5NWZJk2fOReLyelhakhmCExj6krxjkBYGmiBsqjOSt2jpLNseImI8vgxgr(kJBjdUsugKbzZs2CLOmyjbDLOmyj7CTKyW1sgG4AjdGUwYqNRLJJl8nZX)3M)VLm4krxjkXtzqIrKnjckbLyNLS5krzNLe0vIsqlzNReLnlhhx4BMJ28)FNwYMReDLOmargKbu2KyCjOeFTKbxjkpTKnxjkpTKGUsu2zjpDLOmids0YXXf(M54)BZ20sc6krxjkdbzqgAwYGReLXLb5RLS5krzeljORLJJl8nZrB(o)FlzNReDTKbxjkJidseILe0vIYtlzNReLGwYtxjkBwY4UwYxxljcX1sgI7A544cFZC8))(Atl5PReDLOmakdYqNSjdNwYGReLiAjbDLOmILSZvIYolhhx4BMJ28)Btlzexj6krziImidXLnz41sc6krzClzNReLNwYtxjkbTCCCHVzo()28DAjJ7kdXDLOerlziIReLOLmC6krjA544cFZC0M)))BjFDLXDLO8ugKrKnzCjOSZYXXf(M54)F7RnLGUwseIReLbl5RReLbzq2SSKiexzi4krjEAj7CLOmULJJl8nZrB2M)Vm05krjEkdsSt2KiOLeH4AjFDLOe0YsIORerxjkrlzO5krzCzqIqKnzejO81YXXf(M5ak()TPLedUY4UsuInzqIblhhx4BMJ)Vn)FzOZvIYqNmidGwsqxjkXGLeH4krzZs(6kr5PLLeBUse0vIs0sInxjkBYGeLnzWYXXf(M5On))3PedUsu2SKiexjkpTKHoxjkBnzq2aLnz7uckBDYozlyzjrqxhhx4BMJ)VnBtzdDLOmyjBqCLOe0sgEDLOeTSKyNReJ7krjAjXiUsuIws80vIsugKbztckbLnlj25krjA544cFZC0MVZ)3sINUsmIReLblhhx4BMJ))3xBkXoxjkBYGe0sIXDLOSzzjXiUs01sgCTKnxljORL801sIDUsuEkdYiws80vIYxljgXvIYMLeJ7krjOLeFDLOmids0YXXf(M5On))20sIXDLb0vIYGLmaXvIsqzq2SCCCHVzo()28DkbDLOebTKiexjk7SSK4RRm4AjbDLOeBwYoxlzaDLOeTKbiUsuIwooUW3mhT5)))seIReLGwYaORLLmaXvgG4krzWsIVUwYoxjkr0YXXf(M54)F7RnLyW1sIXDTKyNRLma6kr5Pmi7SSKb0v2cUsuIwooUW3mhTzB()wYqWvIUwYGRLe01s25AjpDTKnqxjkrlzaIRLJJl8nZbu8)BtzR5krjAjBDUsuIwYaORLLLJSy)kk8)5NvExj6Azz54bZ5dLOJha9P7JIkh9UOybmk0byadih3(6)5rL3vIUoaWvIYiy8O1opXibqiqEpLbz)b(cjADqA4BhEccPt2KOe0Ek7C0pZLVstauoy40emnPIYjW0KlW0KEiQIwAYao2trzb)CAYSxvg00KJBoGvAsmGPjhqZpttE(Mlnj6XYNpnbAAYt5QAMLMCZstoYLLF2hmuaMwoaApTKbxha4krzaYz0adNGNNrEJhjidY(dJagTiDVV4lKgE2KnjkbTNYoh9Jjuahd(50KS5Xn6rFceG0KC5Jb8P0eOattIbeWXYNMaOBLMu30K8pmgGstI6wK0K(nuGaKMe1GGPjqZNMannPVlWC57rPjqZNMeRstILpnz2RkBg9j8ZPjaaf4tZSBU8PjqbcqAcCShoHFon5bXGHttGNqbinPUPjrphCfdqWZ0eaMqROmFAYnlnbAAYdIbOz0SCa0EAzzPa',
    },
  ],
  sv: [
    {
      mdt: 'daKrkaqjLuL(eOQYOurOtPKQAwQiPBPIe7cuXVurKHbkhdAzI8mjnnr11uHTbuFtjmovkNdKoOsuXcbv6HQivtujkBujv0hvsLmsqvvNeuLxQKk1mvsvCtvKYor)ujvyOQOYtLyQQ6Qkrv2Qkc(Qsuv7LgSGomiwSskpwOMSsKlRuBwQ(SOuJwLkNgiRwfr9ArjMTa3wfvTBvYVLYWfL0XvIkTCapxjz6kUUOy7QO03bvLXRIIZRsv7xil6BbYsl1UoHnWkqTl5bmWwGpiz3G3YSKLtiZYjtj7ZFYwM9zglpK45(SSkkSGrHNB5TUIcxNaG2xlfCVL4wqd4Cqc2ZSH3vV5BjUf0aohKG9mB4T0zK5wGKzANElOba6kBHRJLmGwYYjUm4)6JXl3R1ni4z5SqcYS9TeNbayFnLmRfSp7oqIwIZaaSVMZLjiqIOLzVppORSDnlXzaa2xZYYCL9UDbVLoJerywwTd2XdO2LVeLi6yjRzccw5lrFj6lrjktYKSkRoYKVeLOJS6lrj6iZ9LOmjts0XsClObyP3R7E3rM8LOVeLhYKmxwLGDK5(suwLjzUJL4wqdWsD37q3oYQVm5lr5HmjZLvz1rw9LOSktYChzUVeLGDSe3cAaw696UUDK5(s0xIYfoYKVeLjhz1xIYKJm3xIYdhlXTGgGL6g6U3DKh(sCHVeLOJet(owIBbnal9EFT62rc2xMs(suIYKm5yjUf0aSu39EDlXf(oseMVeLOmjtosW(suE44ix4BjUf0aS071n0TerFjkrhzUVeLlCKyYxIs0rc2xIsWYK8MSkx44iV5lry(sucwMK5YQ8qMlRYd5chlXTGgGL6U37DhjuFlXTGgGLEh6A1TerFjktYKS6iZ9LO8MJeH5lr5nzsc1rc2xIsOooseMVL4wqdWsDx39UerFjkVjtYfYQeSJet(oseMVeL4HmjrWYQeZDKG9LOeLjjM74ir0xIOVeLqLjjcZXsClObybc271TeH5lrjUqMKimzvIOmxIj5HeRosW(suIvhhjM8Te3cAaw696U3Li6lrzUmjpCKyY3rIW8DKG9LOetYKeHjRseDCKy1xMQ(oYemFjkrhjc1xIs0rIl8DSe3cAawQ7Eh6wMY9DCKyUVL4wqdWsVx31TeH57ib774iXdFjyFjkZLjzswLvh5HVeLOJL4wqdWsDdD37oseSVe9LOeQmjV5ix4lrzsMKOJ8MVeLOmjRowIBbnal9EFT62rIl8LPQVJ8MVeLjh5HVeLjhlXTGgGL6U3RB5cFjkRYKmxwLhoYuUVJeQVeLOJJeV5lrFjkXKmjr0XsClObyP3RBOB5HVeLvhjuFjkZLjz1XrIq9LOVeLimh5nFjkpKjzUJL4wqdWsD379UeQVeLjhhzcMVL4wqdWsVdDT6wMo8LOeDK4nFjkrhhzc9Ly1xIYQmjtos8WxIs0XsClObyPUR7E3rMs(sS6lrjktYChjc2xIYKmjrhlXTGgGfiyVx3oYu1xI5(suMKjz1rIG9LOS6yjUf0aS071DV7it5(sm3xIsWYKeDK4HVeLvhlXTGgGL6U3HUDKPdFjM7lrzUmjpCK4HVeLjhlXTGgGLEVURBhzcSVL4wqdWsDdD37Ye6lrj6iry(osW(ooowaa1N1rVVApR8LOVJJJf4BVZIeTSeOEhuCMG5EjcZsBTtEhpR8LOVLL8LOmDuHZbc9OEBXXT8fYK8uQyoCsPkme2b4BiuzvIYCHR8WcCdGeNLvNh0C3jTm4dcq)Kw(qaaa1aIcxltVhfc6kkCUd0QOqiaBirHZDqMOWSbD29QOW7BzaIcZgOLjRrHiS1Bu4z3aRIc7nGOqe25bDTcorHWRhfEFltuymKl43efMnaK1IcbnrH33Yefgd5kkeu2xnGDu4C3okmRqIZsuiOROW5UDuyCd4AdefczvuiOjke0QOW91acyhCFu4(mdaKOW4wMRboowUeUoYKVLL8LOmVcfoh3GbDr9OUyHmjpLf5WjpTipDG5GHLalRsuMlCLhwwpzwnrHzntqquigfEIX3bb0fORSJcbDnTOWSMjiikmT(NAu4Pbz1SbIcpniX3b6c0Qz1Pgfc5APOW2vu4PVmhlxcxhhhf',
    },
  ],
}

async function convertRouteDefinition({
  difficulty,
  name,
  mdt,
}: SampleRouteDefinition): Promise<SampleRoute> {
  const mdtRoute = await decodeRoute(mdt)
  const route = mdtRouteToRoute(mdtRoute)

  if (name) route.name = name

  return {
    difficulty,
    route,
  }
}

export type SampleRoutes = Record<DungeonKey, SampleRoute[]>

const sampleRoutes = dungeonKeys.reduce((acc, key) => {
  acc[key as DungeonKey] = []
  return acc
}, {} as SampleRoutes)

const difficultyToNum = (difficulty: SampleRoute['difficulty']) =>
  difficulty === undefined
    ? 0
    : difficulty === 'beginner'
      ? 1
      : difficulty === 'intermediate'
        ? 2
        : 3

const wclRankingToNum = (wclRanking: SampleRoute['wclRanking']) =>
  wclRanking === undefined ? -Infinity : -wclRanking.score

function sortSampleRoutes(route1: SampleRoute, route2: SampleRoute) {
  if (route1.wclRanking !== route2.wclRanking) {
    return wclRankingToNum(route1.wclRanking) - wclRankingToNum(route2.wclRanking)
  }

  if (route1.difficulty !== route2.difficulty) {
    return difficultyToNum(route1.difficulty) - difficultyToNum(route2.difficulty)
  }

  return route1.route.name.localeCompare(route2.route.name)
}

const dirname = getDirname(import.meta.url)

for (const dungeonKey of dungeonKeys) {
  for (const routeDefinition of sampleRouteDefinitions[dungeonKey]) {
    const sampleRoute = await convertRouteDefinition(routeDefinition)
    sampleRoutes[dungeonKey].push(sampleRoute)
  }

  const dungeonFolder = `${dirname}/${dungeonKey}`
  if (fs.existsSync(dungeonFolder)) {
    const files = fs.readdirSync(dungeonFolder)
    for (const file of files) {
      const sampleRoute = JSON.parse(
        fs.readFileSync(path.join(dungeonFolder, file)).toString(),
      ) as SampleRoute
      sampleRoutes[dungeonKey].push(sampleRoute)
    }
  }

  sampleRoutes[dungeonKey].sort(sortSampleRoutes)
}

export default async () => ({
  data: sampleRoutes,
})
