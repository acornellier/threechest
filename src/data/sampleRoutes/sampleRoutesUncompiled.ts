import type { SampleRoute } from '../../util/types.ts'
import { type DungeonKey, dungeonKeys } from '../dungeonKeys.ts'
import { decodeRoute } from '../../../server/decodeRoute'
import { mdtRouteToRoute } from '../../util/mdtUtil.ts'
import { getDirname } from '../../../server/files.ts'
import fs from 'fs'
import * as path from 'path'

type SampleRouteDefinition = Omit<SampleRoute, 'route'> & {
  mdt: string
  name?: string
}

const sampleRouteDefinitions: Record<DungeonKey, SampleRouteDefinition[]> = {
  ak: [
    {
      mdt: 'dGZhkaakjOQzHaQBjbHDjHWWeshd1Yu1Zemnv6Ac12eX3KkJdHoNeDqjKSqeuEOeKAIiO6JiGCsrb3uck2j8tjO0qffAPsqLNkLPI0vLGKTkHO9sdwQ6WsIflbESkAYcrxwP2mI(mc0OfcoTK0QLqQxJamBr62IIA3Ik)wjdxuKJlbrlxs9CrPPR46IQ2ocsFxc14rqCEHq7xfwwQTkrg5kxrURZwDLtehh1wXvi4kdeUncGWlUAX5kCeOIY2SjKXgTY5erci7rFlC0NXcfbY25kDvNXkP7z2zih5sQTZv6QoJvs3ZSZqKeI4ARs(zvOxPR6Q5iOeMJT8vJ0wzrxCHPq2Yug7kYcVncTsA(TuBZEN5Q5iOfy7mFD9o30Yxq6Mq3Pc22z(66DUjJ5ttfSTDUDMJyrLnBvcMlZ7CtwPo2oZxxVZneE(CeCVYLHijebZbBz3P7ZP6kNublyhBzkFAAwPcwQGLkyr4kEXlcIqS4kcIyrirKiIfDIRGOirukywWrfHOcMfFPGFrGfCqWrf8vu6iEPcwelEX9fbXniUIerS47ejIpr0jEIcIIVuuk6eCuX9kywCJDebPcwK4iUsfSiw8Ierq8oIoPo2oxPRABKKHnjPJ4LkyPcw8efV4VIG4FXv8brS4tejIVt0j(yhXl1reKkyrSJ4kvWIpQ4fCPJOtQGfSJTZv6Q2wytswUDebPcwQGfplEXhveeCPJ4LkyXFfV4dIG4JfxriiIfHRireIDebPcwq0rCLkybNiEbhlccoQ4kywel43X25kDvBJKmSdBhXvQGLkybhlEb3jccorCfmrhXlvWcor8coweeCN4kyIIybxkse8v0j4xquWbhXvQGfLoIePcwWocowQJTZv6Q2wyxUjjDeXsfVubl(OIx8Sii(xCfjViwKCfjIKyrNijrquK0jkfjbhrqQGfxhXvQGf8v8co4iILkyb7y7CLUQTrsswqy7isKk(xQGfS4fViiUIRi4i4ePcwWo2oxPRABHnjzy7i6KkyPcwecocIsfS4fViiccwCfxrSiwKiseDIobrbrrPGJk4OIsbZcMDeLsfSGfV4DeCuPcwWocMLkyb7i4xQGfSJTZv6Q2gjzyxUDeeLkikvWc(fVGVIGGdIRGJfXcorKi4orNGjkik4shBNR0vTTWMKKKuWSublEhb)sfS4DeCuPcw8oIsPcwe74ikLkikvWIpQ4fplcI)DSDUsx12ijlliSf8lvWIGJGJkvWcMfVi4ikLkyXv8IehhbhvQTZv6Q2wyh2KKIsPcw0jEbrrqu6i4OsfSiw8Iehb)sfS464iywQTZv6Q2wfMKmSfeLkyrOu8IarrqesexrOZrWrLkyrNJGFPcwKiErNJJGFPcMLkyrSJGOubl(oXl(RiiEIIR4JfXIprKi(GJTZv6Q2gjzyts6i4Gub3jvWc2rWeLkyb7y7CLUQTf2KKLBhbFLk4RublUIxWIG4fxrSiweCeCqQGfSJGJLkyXlEblcIG4kUo2oxPRABKKHDy7i4yPc(kvWcIIx0jcIsXvWrfXIehbhKkyX1X25kDvBlSl3KKcML6i4yPcwelErIJJGtKkywQGfjocoivWIx8IGJTZv6Q2gjjzbHTJG7KkyPoIxQJii1rCL6i4sPcwWoINLkyblEX7i(OsfSGfV4DSDUsx12cBsYW2XXwDvYPWssMDpzLkyPooo2kEVjabBlYQKKvpZNoruWrTTkOO3NtwPcwQTiLkyr8tSikzoHyxi5g9kErHiCllI4YBx4l7(preeS4kHjITLbYJ(iUYF0hHke6(OVYrpbxRip6jy9kFMo6J4k)r)zLCh9tfcyF0NP8PPh98rFL00J(jc7J(IReXJ(zD0pryF0N5Q5QE0xWkB2J(IRor4OVG01kY08zhc8r)AIWUU4Qz3h9rUo6Niun7rF2mxjnDxF0NP8PPh9vYf5rFA(SZrpz16SZrFbRSzDSLtcZXXrb',
    },
  ],
  db: [
    {
      mdt: 'diZIfaqlLkvddeDmOLPKNjLPPuUMk12KQ8njY4KQ6CQOdQurwOsf1dvQqtuPk9rLkXjLkANOFQuPmuvqhvPs6PatvXvvQGTccAV0GvQQoSk0ILk1Jb1KLaxwWML0NLkCAjQvlbLxRuvMTQCBPs2Tk53cnCjOA5QQNdstx01LqBhe47GqJxf48sq2VsvSOJGJfuq8ccdFOLJxY7BifaXJDe7CVcoi21UFcnwtbz4GuWCeol0(GUN9dA7z)hUd7Ia44l(p84lKzOZRA0raC8f)hE8fYm0zbhi3eCSyg3X4l(lF1H7SPGILlqqNqH41VmORDT8iaco(kgCeKHqxLV6WUfax8)dxjOy3VaeeEsuaCX)pCLhw89K9feUcDvODck0YDC1v4kH6ykaU4)hUY9w8QJq8QZcoqIikaA4fGZYXlhjk7BkOWl(EqDKOJeDKOeLl5s2Knt5YrIsuUKltzZrIs0uaC8f)cQ1wOwnLlhj6ir5MCjVLnzpt5YrIYMPS5ir5YuU5irjAkao(IFbTqTEgmLnhj6irzF5swYuUCKOCZuU5ykVDKOenfahFXVGATfAbt5MJeDKO80uU5ir5YuE7ir5YuaC8f)cAHZqTAkVDK4MJeLOPa44l(fuR1UBbtzphj6irj2ZuUCKO80u2ZrIYsMYsosu2AYLe3mL9DKOeLl5YuE6ir5TPa44l(f0c1Alykl5il5irjkxYLPexosuIMcGJV4xqT2cNbtzFhzphjkxltzjhjkxOPSVJeLiKYL80uILCmLNosuIBYLeVnfahFXVGwOwRvt5PJC5irzFtjIosuIMYthjkBMYsosuEBkao(IFb16z3TGPeH0raC8f)cAHwOwL9CKOSbPCjBOSjBl5MS1mLnhjk3mnLi6irhjkXLPC5irzp5sEBk3CKOSVPSNJeLRnt5PJeLyptbWXx8l4iwRTGPexocGJV4xqT2c1Qel5ykl5ykriDKOenLNosuIYLCzAkXMJa44l(f0c16zqI3osuIMsSVJeLl5s2Knjk3KBYB5TPPe3CKLCmLyZrIs0uaC8f)cQ1wOfmL4TJa44l(f0cNHAvI9CKOennnf8lxZDRwHgsOos0X00uaedH9jrbfuUwldx8LfsIqki2DHfGtOoMMka',
    },
  ],
  eda: [
    {
      mdt: 'dCd7saalkfr3cHDb1WOYXqTmGNPQPb5AiABQ03azCi15uYbPuiwOkOhsPq1evkP(iLOmskfHtsjQUjLIYoj)eukmuqPAPukuEQIPsvxfukARukQ2RmyvOddkzXkLYJPunzvGlRuTzK8zLs1OPeXPPKA1ukKETsjz2GQBRuI2nLWVvrdNsblxP45usMofxNsPTtPi9DLsy8GsPZtjs7huCC(gyDWbNwyZ33yL1NwKijDnBbS2(PLV1nW(wRTrBjw2YgAm7WwtJhw2nw6wzfmhNhMJWoSPL1y)e(5gyhwW3nMDl3cQZ8n2pHFUb2Hf8DJz3Ypa2MqnWYwZPn(j8ZnwBX27Wmn2A9bn2y2CRSdBynStz5olPXMcl42UNVXSVVLwBX2BBn2TDZMDlmJTBd(UnDhEIBSB7Mn7wyGDBHdpbA2TyFlTuBeRSY6TBXwUBHXQ8zASB7Mn7wy2ABTy77Nwy5haBtm4BSAh(UDJ1NwKpXjqMgBWw4WTkFIZN48joHsGez6t3mjq(eNUjqImt6ZN4ezcKGsFcKqjuIm9PB6MGsmNOt0PvALyxIDzsO8jobsG0NjrMpXjotJ9t4NBAOO(DkQmjq(eNpXPpbs0PpbLjbYN4ekt6ZN4eJsGetM(e)juIVjYedYKq5tCIZKiZN40NajqMeu(mj2LptI58zsmiFMg7NWp3087uuR9mPpFJ9t4NBAOO(9FpXK5tCIZKy68joXjqcK(ekHsFMmju(eNpXPvM0nFItGmjO8jobYKOZN4eNjTYN4eibsCMe7YN40NPX(j8Znn)(ANIktImFcLpXjYeiHYKU5tC6ZKGYN4ekbsFMeD(eNqzASFc)Ctdff12(90kFMmPB(eNptJ9t4NBA(DkQFpDZN4ezMe7YN4eitALpXj6eibL(e7sO0ktMeu(eD(eN4vcKyxMg7NWp30qr97R9eu(eNyqcKyo9jotID5tCcLjTYN4eFZKjrNpDZN4eNjbLpXj(ZKOZN4eWLjTYN40dYKyx(eNyuMg7NWp3087uuuuzsR8j68jobLajgK(eZzASFc)Ctdf1AB)EALpXjgLaj(tFIHsOetNjtID5t05tCIobsaotJ9t4NBA(9FNIkbLpXjgLjXU8joXKzsR8jo9FcKEu6tpzMmjMZNyq(mjGlFItCMg7NWp30alMI63t8kFItCMeFZN4eNjXU8zsR8zYKyq(e)5Z0y)e(5MgkQFNIkXG8joXjqcKjXU8jorMaPBM0kFItaotMe)5tq5ZKOZNjTYNjXU8zsmNptIb5Z0y)e(5MMFNIATNjXO8j(ZNPX(j8Znnuu)(VNyq(eN(eiHYKyx(eNGYKw5tCcaYKjXK5t05tCIVjqIjZ0y)e(5MMFFTtrLyoFItOmjgKpXjOmj2LpXjotckFIt0zYK4B(eD(mjgKpXj6mn2pHFUPHIIAB)EckFMe)5tCALjXU8joXGmPv(eNa3eibwPp9Umzsmu(eZ5tCImtIoFItmDMg7NWp3087uu)EALpXjazMmjMoFckFMeD(mPv(eNaOmj2LpXjMZKyoFIt3mn2pHFUPHI63x7zs8kFIHYN4eNPX(j8Znn)offfvMmnBSMYaBqrz1UXQ8joFMmzA2I99TkXnhynfL12TfUXstGV5CB2O72nwLprMV5G8jobLajgZPpXjuhMiBOOOOOOs3ebDcQdZ0apFIBqis8kbAiaoa2L(ge6XReQHa4C4BISbHE8kDBiaoh(MGAqigdLOBiaohgKwnieJHsSRHa4CyqI5g0VWFIbneaNd7s83G(f(tmQHa4CyxIjBqpeMt8THa4CyxIHAqpeMtmDdbW5WUeVAqpjMtaxdbW5W3eGBqpjMtaqdbW5W3e4Bq)JDjaQHa4a4pbiBq)JDjWTHa4a4pbGAqVdVsa6gcGdH5ey1GEhELExdbWHWC65geGgtNEqdbWDXG0)nianMo9OgcG7IbPNSbbUy60FBiaUlMo9qniWftNE6gcG7IPt)QbbqyOeY1qaCxmDcXniacdLqGgcG7IPtOVbbayOec1qaCKyOeISbbayOe62qaCKyOecQbbCyOeIUHa4q4pHwniGddLiDneahc)jsUbX04prcAiaoagLi)getJ)ejQHa4ayuIKSbXxmzI82qaComkrc1G4lMmrs3qaComkrUAqmcJsxxdbVOXO0LBqmcJsxqdbVOXO09BqmaFtxudbVU4pDjBqmaFt3BdbVU4pDHAqSdVsx6gcEHWU0D1GyhELGCne8cHDjiUbXo8NGane8cGHYKjDZ3Cq(eNGsGeJ50N4eQdtKnuuuuuuPBIakb1HzAGNpXni3c)jqdbVGWR03GC0yoHAi4fjgLiBqoAmNUne8IeJsqnihegkr3qWRhJsRgKdcdLyxdbVEmkXCdYbHbjg0qWlg)j(BqoimiXOgcEX4pXKni3c)j(2qWlgVsmudYTWFIPBi4fJxjE1GygJsaxdbVa4BcWniMXOea0qWla(MaFdIFmkbqne86XUeGSbXpgLa3gcE9yxca1Gysmzcq3qWlegKaRgetIjtVRHGximi9CdIjXqPh0qWlegLjtckFZb5tCckbsmMtFItOomr2qrrrrrLUjc6euhMPbE(e3abEmkbAiEhaZPVbcW4vc1q8osmkr2aby8kDBiEhjgLGAGaomuIUH4D0yY0Qbc4Wqj21q8oAmzI5giMgVsmOH4zgtN4VbIPXReJAiEMX0jMSbIHWOeFBiEgHPtmudedHrjMUH4zeMoXRgigHxjGRH4zAmzcWnqmcVsaqdXZ0yYe4BGyaMmbqnepGX3eGSbIbyYe42q8agFtaOgi2HDjaDdXdq4vcSAGyh2LExdXdq4v65gihe(MEqdXdOXU0)nqoi8n9OgIhqJDPNSbYrIrP)2q8pJ)0d1a5iXO0t3q8pJ)0VAGCamkHCne)JWUeIBGCamkHane)JWUe6BURfgLqOgI)HWCcr2CxlmkHUne)dH5ecQ5UU4pHOBi(FHjtOvZDDXFI01q8)ctMi5M76XFIe0q8ia2Li)M76XFIe1q8ia2LijBURh7sK3gIhbWFMmj68nhKpXjOeiXyo9joH6Wezdfffffv6MiGsqDyMg45tCZDXyobAi()IPtFZDXyuc1q8)ctNiBUlgJs3gI)xy6euZDbW3eDdXJa4vA1Cxa8nXUgIhbWReZn31JDjg0q8OhdYKjTY3Cq(eNGsGeJ50N4eQdtKnuuuuuuPBI4MG6WmnWZN4M76XUeOH4rpgK(M76IDjudXJEmir2CxxSlDBiE0JbjOM7AH5eDdXJa4BA1CxlmNyxdXJa4BI5giNdFtmOH4ra8NjtID5BoiFItOhc)p96HaVdTsGebWDXoAe9ZiaIeL(eNqDyISXMW2TdZr7WTMIcMJBbSGdhMJMtyoA1wzTnaZrldqNPXIomtI58nhKpXPlcHV37Ie6cDrOeirGClmcqJq)IFhk9joH6WezJnZARSYAl2omhTbyzFRG5Of7WAdmhTSfmhT2cyoAZ2AVnjmhTShMJwBfmh3IZnglbMJglzhMJwbRTChMJ2pT1cdmhT6eMJglbwgyoATvWC0QD472n7haZXTzRbMJw6PTWC8GtlmWCew2n2cl4WTuyoAd2chomhT2GZ0yrhMjtMc',
    },
  ],
  gmbt: [
    {
      mdt: 'dKJjkaqlfkPDPqvggQQJHSmv9mrnnrCnjABI03uHXPIoNcoiQsYcrvIhQqrMOcvCrLa2OsG(Ocf1jLawPcvAMkuIBIIe7e(PcfAOkH8uLAQsDvuK0wrvsTwfkyV0Grjhwj1Irr8yuyYOkUSI2mQ8zjOrJIQtRqwTcv1RLanBj52Ok1ULq)wLgUsqlxs9CLOPlCDLKTJIuFhfLXReQZRqP2pk1s2UxZdp3I86z9Yr3IIYs(U5zeh3igRQIXwqLUJ5Id39AgXyxWLSzTZSzTiM6y2nV5zKTBU65K53kEeKBU65K53kEg37OItEKjUzYSWvJQgvSqbz4MXT6wVO1vZiMfOi312nJB1TErRRMrmlaplwK4E9Q4oMUv36rfluEXW9Qr84(C04Y7fOamLy8PfWntVUA102nJv11ZIXEftQMm9SsqUzSQUEwmw0QQkb5oMtEpQyHYe3mwvxplgJZQIfoVflaplwKpDVCwnzeJUfTfKGmCVWvvvlTfKTGSfKGoeVGofzbnisepFrP4hePImjoe5xCk(sXG4tfeFXFiis8Nc6fz(cklOSGseuIGkfuPGsfuQGoepjOtX)cAq8zXZx8jINeeFX)ItXNfdIprqK4lf0l(urP4pePI)uCyiEBbjEdr2wqIsXlsfzrIirKnej2csqgIsBbjidXt2gUzCRU1U54YtoodXBliBbjsjXlsFrwKMisePzrPiTuKkstfhI0tXPi9Wq82csq8fVGidr2wqckXquAliXH4fNgIuBdbLyBiOsBdbLABi(32q8KTHBg3QBT78KJByAiY2cYwqIts8IZxKfNjIeXzwukooePIJS4qCKiofhPIbXjFbXxCmiisCCkOxCuAiEBbjOSHiBlibLkEbDyisSfKiXquAlibrgIuBdXt2gUzCRU1U54YZ80qKyliBbjoheVyGVilgErIyGmeVTGeuPHiBliXZx8INmeL2csqzdrQTH4jBd3mUv3A355WKJZquAliBbjgYIxmKkYIHsrIyiXq82csqPgISTGe)BikTfKGsmeP2gINSnCZ4wDRDZXXXK80qKAlsTfK4fVGezrIirKneh2gItBdXt2gUzCRU1UZtoU80qCyliBdXBBiY2gIeBdrPTHi12qCylibzioTned2gcIVTHGY2gc6WwqcYqqd2csqIx8gINSneF22WnJB1T2nhxEomneN2INSnCZ4wDRDNNCCCCc6TneN2csqIxKfzXlsejgcIVTHyWwqIx8cYWqmyliYwqIx8cYqCAlirQ4fhISO0WnJB1T2nh3atYtXGTGeLIxKiYISHHG4BlE(2gUzCRU1UZZ8KJtqKTGejIxKne0PTHGEBdXGTGePIxCyyiiYwq2gI32qKTneL2gc6TfKGmCZ4wDRDVM44YtXZ3wqcs8I3qqN2csqggc6TfF2wqISH4jBd3mUv3A3CC5jhNGsSfKilErIHGsTneuPTGeVHGY2csqggckBl(STGeVHGY2csKnCZ4wDRDNNCCdtbvAlirw8IedbLylirQ4fLIS4WWqqj2IpBlibziOSTGeVHBg3QBTBoU8mpfuITGeV4fKHGkTfKGmeeFBdb92ggcQ0wq2gI32qKTneL2gIuBdXHTH402qmyBiiY2qqVTHGsSneuPTHGsTfKGme0PTH45BBiEYwqcs8I3q8VTGeKHBg3QBT78CyYXzy4UEexmg54woJL2cY2WWWnZMZcki3mBDH3cmoUhdXIR5vliJchlUVmz8NmIL2cY2np2csKhsgVH0KYpNMMpgeVySoCoEjP8hkZe)F44fzbjsKxeLUzkRl4KnRLRQNSzfx2SwYS1lKnR4YM1TMnR7QOEDXcNSzTGJwY8LXigfCjBwRlYdBwRwozZAz1LzlzZIzmFwKnRG5t2Sw4AgfKnRrlzZQ6Ym2SIlBwlSEY0ZIbBwbZN8MnlU6lVzZIRAohvSq2SI7LnlU11gUlkVyyyOa',
    },
  ],
  hoa: [
    {
      mdt: 'dKZyCaalueLUfi7cyyk6yilJ4zQAAqDnuTnL8nqnou6Ck1bvOuzHkGEOcLYevGs(OkQ0irrKCsvuLvIIOAMOisDtuef7K6NOiIgQkQ4PKMkKUQcuQTQqPQZIIiSxzWqKdRaSyueEmkQjRIYLHWMvHpJIuJwHItRGA1OiHxJIenBfYTvGQDRG8Buy4kuslxf55kunDv66kq2UcL47OiPXRIQ68kqX(HOok00bC2zmgAShXPXhMXqzoFME2WhhdZ8GgDhmzAMErC(3u0bW8DWWuooYiPpYiDod2NB6GF2WHMECcbIXWy0zzk94eceJHXOZyYzm8qiolMiLjqW0dA4rdpetNPUPmZyeJtNZagH4ErCEdDWi0uMzmIXPZzaJqCVioVZo)moDad6YySXyeJtdpet3a7MoOHpl905CA8XIYzcpASLowgWObHi00lced(WdX0XePmpOtNqm0vhetmcXybXOmLY8GoDcXq3ZzqJgLHtrmeIbFWm2n(4dZ0dn4ig6oEODtzEqNoHyO7G1GgIPrWyOZ7SZp)Z0XrmcbZ3HzmuOzkd3nDSoOrJgp0mfAMcntzjlzk)zA1nlH2n)H2nJdntzsYsM(UzEOzklRSKf48NfCgNfE38k0mL)Uz4qZu(7MYmJrmoLEC8ioo6MLqZuOzk)DZsOzktDZFOzktzjlDZ4qZu(7M5H2ntsOzkJ7MYmJrmoL(ioo2i6M)qZsOzkZ2n)H2nJdnt5DwY0SBMhAMYYmlzco)zInJZ0oZZeVBEfAMYs3mCOzklDtzMXigNspoEepIUzCOzk0mL3DZsOzkd3n)HMPmHZsM(UzCOzkZ2nZdTBMMH2nLzgJyCk9rSrCC0nZdntHMPmn7MLqZuE1n)HMPmrzjts3mo0mLjQBMhAMYcLLmTYFwKmolF3uMzmIXP0JJdM4r0nVcntHMPmHZsE1nlHMPS0n)HMPmol5VBghAMYswYeC3mp0UzscTBkZmgX4u6J444r0ndhAMcntzE3SeAMY4U5p0mL5zjV6MXHMPmUBMhAMY8SK)8NLmoJZ8m1ntsOzk)DtzMXigNspoEeBeDZSHMPqZuM4DZ4qZuMNL8QBMhAMYRSKHZFMnJZ7U5vOzktDZWHMPm1nLzgJyCk9rCCCC0nVdntHMPmC3SeAMY8U5p0mL3zjtZUzCOzkd3nZdntzIYsMM5ptsgNjCMNPVBMKq7MYmJrmoLECSzIhr3mndntHMPmUBwcnt5D38hAMYeBwYeC3mo0mLPUPmZyeJtPpIhXXrMKqZugUB3mrHMzdntzQBkZmgX4u6aOJJhr3mjHMjk0mLzZsEN)mn7MYmJrmoLEC8iooY0m0mLF4SK)p)5hNX5FL55NNx5NYW5xYSzzN35F2nVdntzQB3m9HM5H2ntsOzktZUzIcntzsYsMOUzCOzkls3uMzmIXP0hXXXgrEhAMY0SB3mHdntuOzkZZsE1nJdntzzMLSqDtzMXigNspoEepI8o0mL)UDZep0mfA3mp0UzscntzQBMOqZuwYsgo)zQBghA3mndntzzMLSq5plsgNPDMNLVBkZmgX4u6JyJ44OBMwHMPp0mLPUPmZyeJtPhhhmXJitSHMP8klzj)5pJZuMNX5vM3TBMGdnlHMPmnZsMOU5p0mLfklzzM)mT7Mjk0mLjCwY03nVdntzI6MYmJrmoL(iooEeDZeBOz5dntzklzPBkZmgX4u6XXJyJiJdntzb3ntsODZRqZug3TBM2HMfj0mLPUzHcnt5plzk)zjJZ4UzzgAMYu3uMzmIXP0hXXXXrMWHMPm1TBwMHMYmJrmoLECSzIhrMwHMPm1nt8qZugolz28N3zCMMzEMO8kVYWzzMzZeBENfktZSizIYYNjjt7m9z6ZeotRmXZeCMwzsYeCMWzInt8mTZFwMzkluwYIKXz5Z8SGZcUBwWHMPmLLSK)moJZF3UzHcntWHMPm1nLzgJyCk9r8iooY0o0mLPSKL8NXzC(72TB6PHpUmjpoghXD8qZuODZ0m0Uz2q72TBktfbcMYmntzQdGPzCEdwPmyYzYWKA4Xkt6NjrkdMGPabZ3XdntHMEwOzkVyFahJ5R9AdZXzjdH5CGG5YCbJjyC(Zug3aZ80ZvEKrAigiJ0igdX0ioHmsio)Hh)ootwKrA4Hg)IyaNHms3XG4ecKrA4XrgjgdHazKqC(3tdazKgBmgncbZxgNqgPHhczKoxHJmsm1XmmZJbzKgECKrIPoMbdYiDhdcKrAmmg0qNn4dy8lItiJ0WJJmsJJyecMVioRB6qnWUzEOPNfAMYFwYeGYFwY4gyMNECCCCCKxzi2mCdSB6OqZukXFaBwsHebdK8NslbGZ4uirWajZtPLaW5vkKiyGKHtP1gSZSPqI8GzENsRnyNPzkKipyMjkLGxa2mjPqIqGDM(ucEbyZeofsecSZepLwSajtRuiriWotWP0IfizInfsecSZ0oL4BWklZuireaolukX3GvwKuireaolFkXfaLfCkKipyMfEkXfaLLvkKipyMf4ucVaFwytHe5bRSStj8c85FMcjYdw5NsjUaO8lPqI8Gv()uIlak)4uirEWk)8uIZcW5FLcjYdM5hoL4SaC(ztHe5bZ8VtPfhSZ4zkKieyNXukT4GDglPqIqGDg)PeSa2zmofsKjaoJ5PeSa2z8kfsKjaoJHtPfhSZy2uiriWoJ3P0Id2z(mfsecSZCkLGfWN5skKicaN5FkblGpZXPqIiaCMZtP1g8z(kfsKjaUB38k00Zcnt5plzcq5p)zCdmZtpoooooYRmeBgUb2nDuOzk9XlWmlPqcMfSZF6)BaCgNcjCbGZ80)3a48kfs4caNHt)FbyZSPqchdG72ndhA6zHMP8NLmbO8N)mUbM5Phhhhhh5vgcod3a7Mok0mL(VayZskKGHbs(t)FdOmofs4eGnZt)FdO8kfs4eGndN(ymGnZMcj8fy3TBMn00Zcnt5plzcq5p)zCdmZtpoooooYRmeBgUb2nDuOzkflWGplPqcnbS5pfltaoJtHecd2zEkwMaCELcjegSZWPyId2z2uirEWmVtXehSZ0mfsKhmZeLIPjyLjjfsEcmZ0NIPjyLjCkK8eyMjEkEUaZmTsHKhgGZeCkEUaZmXMcjpmaNPDkEob7SmtHe8dGZcLINtWolskKGFaCw(0Fdd(SGtHeobyZcp93WGplRuiHta2SaN(BoGYcBkKWHb8SSt)nhq5FMcjCyap)u6VFWo)skKSEWo)F6VFWo)4uiz9GD(5P)(b48VsHK1gaNF40F)aC(ztHK1gaN)D6VFWoJNPqc8cmZyk93pyNXskKaVaZm(t)nhSYyCkKW(aEgZt)nhSY4vkKW(aEgdN(7naoJztHKnbMz8o93BaCMptHKnbMzoLINCaoZLuOFobsM)P4jhGZCCk0pNajZ5Py6b8mFLc9tyaCMdNIPhWZC2uOFcdGZ8DkweGKxZuON4ajVOuSiajVKuON4ajV(u8taCEHtHEAd25fpf)eaNxRuON2GDEbNIXeGnVytHEraW51ofJjaBgEMc9IaGZWukgddwzyjf6Lh8z4pfJHbRmmof6Lh8zyEkMZbRm8kf6Lh8zy4umNdwzy2uOxEWNH3P4fg8z2zk0lcaoZsP4fg8zwjf6fbaNz)ummgqzwCk0leyLz5PyymGYSRuOxiWkZcNIzFWoZYMc90gSZS7um7d259mf6PnyN3ukE)a48wsHEIfq59NI3paoVXPqpXcO8MNYNcyN3RuONwaCEdNYNcyN3SPqpTa48ENYjcmZ0CMc9egaNPjLYjcmZ0usHEcdGZ08t5em4Z0eNc90dMzAYt5em4Z0CLc90dMzAcNYfyGKPjBk0p3aCMM7uUadKmrZuOFUb4mruk)5GptKKc9toGNj6t5ph8zIWPq)Kd4zI4PCSayZeTsH(5eWMjcoLJfaBMi2uOFobSzI2PC8gqzsMPqYMdMzsOuoEdOmjskKS5GzMKpLZXa2mj4uiHDd(mj8uohdyZKSsHe2n4ZKaNY5Wa2mjSPqc7dMzs2PComGnt)mfsyFWmtpLY5SGDMEjfsGxGvM(pLZzb7m94uibEbwz65PC(gWZ0VsHK1gqz6Ht58nGNPNnfswBaLPFNYxtWkt4zkKSiWmtykLVMGvMWskKSiWmt4pLVMGvMW4uiH)aEMW8u(AcwzcVsHe(d4zcdNY5SGDMWSPqcEbwzcVt5CwWot8zkKGxGvM4ukNJbFM4skKGNajt8pLZXGptCCkKGNajtCEkhVaSzIVsHK)bFM4WPC8cWMjoBkK8p4ZeFNY)faNP1mfsKfaNPfLY)faNPLKcjYcGZ06t5)eSY0cNcjYd4zAXt5)eSY0ALcjYd4zAbNYPnGY0InfsiwWNP1oLtBaLj4zkKqSGptWukFcdwzcwsHecd(mb)P8jmyLjyCkKqyWNjyEkFobRmbVsHesa8mbdNYNtWktWSPqcjaEMG3P49dGZe7mfsOjqYelLI3paotSskKqtGKj2pfZcd(mXItHK5gqzILNIzHbFMyxPqYCdOmXcNIzNaCMyztHKjlyMj2DkMDcWzAptHKjlyMPnLIHXa4mTLuizUaSzA)PyymaotBCkKmxa2mT5P4flaNP9kfsMCWktB4u8IfGZ0MnfsMCWkt7DkEjGvwMZuizYbZSmPu8saRSmLuizYbZSm)um)b4SmXPqYedWzzYtX8hGZYCLcjtmaNLjCkgVa4SmztHKjhmZYCNIXlaol0mfsMCWmleLIXtaLfssHKjmaNf6tX4jGYcHtHKjmaNfINIFbSYcTsHe6buwi4u8lGvwi2uiHEaLfANIfoGYImtHezcMzrOuSWbuwejfsKjyMf5tX0gWMfbNcjYcG72nVdn9SqZu(ZsMau(ZFg3aZ80JJJJJJ8kdXMHBGDthfAMsFbdOSKcjpmaN)0xWakJtHemgSZ80xWakVsHemgSZWPVGbuMnfs4tWkVtFbdOmntHe(eSYeL(Yd4zssHe(cSZ0N(Yd4zcNcj8fyNjE6lpGNPvkKSeaCMGtF5b8mXMcjlbaNPD6lpGNLzkKapbSzHsF5b8SiPqc8eWMLp9fmGYcofsGHbWzHN(cgqzzLcjWWa4SaN(cgqzHnfsGzb7UDZ0m00ZcntzoNa8j7ML(jnxzjdjCwGWo5elwWlj)zkJBGzE65DGmsNlTqgPX6aUNymczKgECKr6YGbYiDmGtiJ0XjgdoYiDUemYiDhdIHqgjMIbn(fzKyEmdy4HqgPHh6YazKg(Imsd44I4eYiDhdcKrAmmg0qNn4dy8lItiJ0zdJy8UPd1a72TBba',
    },
  ],
  of: [
    {
      mdt: 'dKJAmaqlOAxsmmP0XewMINbAAs11uPTPQ(MiJtvoNkCqarTqOqpeqqtekQ(iGaJeqiNuffRekkDtvuQ2j6NasAOakDuar8uLMQOUkGqTvar6SQOK2lnyOO4WqblwsIhljMSksxwsTzG(mGkJwfLYPvr1QvrjEnGuMna3gqHDRI43sXWLKuoUKKQLdLEouKPd56ssTDaf9Djjz8aQ68as1(bKydZUy40tBobiTglMoV5e5926wvya4AodM7wbZw17a)z7umV7IQbEKBgdvqaDGgMakyMfcuWmalqmqGBLganybwmaOgHQpZjGnMDR0aOblWIba1iu9zof4LDxmunQbiSbqd2Zpb4eJICR(8tDRkGmqcW4marN9ZpRazGQlWedaQU2SBLQXIT(e0wDvaudmRbid3kvJfB9jiGTAaaKpxuDnW48taoRIBLQXIT(eeMx9jaxDZjN5uGxgXHlMQbuxbDEZjMLH8jYTQvnaayYSmmldZYqcfjhZYq(KJ8qKSBwgYRCKHek)IKxZYqMKJ8jHYdzxgYRegYVmsYKmEIKrRzzih5idrUvAa0G1feewdcksoMLr3SmKDrYaAwgYqoYrK8AwgYPvoY4qKBLganyDH1GGh1Y5AwgYRiz3SmKJCKDjucfjJwZYq2fj)MLHmc5iJrKij0Sm6MLH8ksgqZYq2LJekHYRi51SmKtih5mICR0aObRliiSgwlNRzzihrYymlsKSBwgDZYq(fjVMLHC6YroqrYymlYTsdGgSUW6JAqqz0AwgYRCKFrY5AwgYUirYRzzywgYRCKDrYRzziNRCKZxcLts2LZtKmAnldzsoYNi3knaAW6cccwfyTi53SBLganyDH1GGWA5Kmldzih5isghMLHmejJNzzidrIKjZYXSmKHCKtRekJdrsOzziJroYakHYOls2nlsEnldz8LJmUIKjZYq2fjJwZYqcf5wPbqdwxqqy9rTi5ZSCmldzKKJm(sOmEIKjZYqoYrcfjpmld5ihjuKBLganyDH1GGGGYymlsK8WSCmld5eYroJij0SmKXvoY4ls(nldz8LJmUICR0aObRli4rvG1IKrRz5ywK8AwKmzwKmsMLHmejNXSmKHCKJek7YUekYTsdGgSUWAyniOizeMLJzzihOCKtxKeAwgYijsEnldjCKJmgjugDzxgqrYKzziVIKpZYqoICR0aObRlgcqqyTizmMLX1SmKD5i)sOCKDjuELH8lVICR0aObRliiSgeuKmGMLtRzzidrUvAa0G1fwdcEulsgDZYXSmKZHCKWwjuoprYimldzxoYqK8WSmKD5iVIKxZYqohYrcBf5wPbqdwxqqynSwKmUMLJzziNKi51SmKqOi5HzzitYr(fjJWSmKp5itIKX3SmKDrUvAa0G1fwFudcksgFZUvAa0G1feeSkWAz8nld5ihzisKmsMLtywgYqKC(MLHmKJCKqjuKBLganyDH1GGWArICXEoicOccIPAeMmldZIejYTQQRbAYW90ZbbpVs1aqaDz062uLZsDfeMmldZUNAwgYKCKrjKqzi7Ir51feeeeeu(L4pzsmkYfGzz4oWJYHCCXVhfOe6o9P0LDx8FVeYR70Nsx(DX)9sitUt)xALpx8)RCLhUt)xALrRl()vUYiCNBBbkJXfpfLNmGUZTTaLr3fpfLNmUUZTx6Y47IN6Lrgj352lDz8CXt9YiJd35(kp506INULUCc35(kp5mU4PBPlhO78HLroDx8uQ0kNR78HLroFx8uQ0kNK78tLropx8uQ0LZH78tLrcBDXtPsxcd3jffOeoU4Pu5jHq3jffOe2DXtPYtcVUt6w(s43fpLkpjm5oPB5lHpx8uQ8KWd3jDusYERlEkvEYE4oPJss2hx8uQ8KDO78GLVS3DXtPYt2VUZdw(Y(3fpLkpzp5oVujj7px8uQ8K9d35Lkj5T1fpLkp5nCNJPeY74INELrEHUZXuc5T7INELrEVUZXVeY73fp9kF5n5oh)siVpx80R8L3dxyBBjK)wx80rPl)HlSTTeY)4INokD5h6cB7Lq(7U4VO0k)xxyBVeY)3f)fLw5p5cBFLR8)CXFtzK)dxy7RCLPwx83ugzkCHXuUY04I)6LVmbDHXuUYu3f)1lFz66cJE5ktFx83T0ksKCm7EQzzitYrgLqcLHSlgLxxqqqqqq5xI)KjXOixaMLHlmMYvoU4PJsxcDHrVmYUl(dwEYRlm6Lr(DXFWYtMCHXV8Lpx8xQ0ksKeA29uZYqMKJmkHekdzxmkVUGGGGGGYVepjtIrrUamldxy0lhYXf)9lJe6cJ2YHS7I)sLw51fgTLd53f)LkTYKlS9xoKpx8xQ8KhUW2F5qgTU4Vu5jJWf2(lxzmU4VxzejsKif',
    },
  ],
  psf: [
    {
      mdt: 'd0Zukaakva1TaOAxaLgMs4ycldYZK00GQRbY2eLVjcJdiNtKoOsuyHQqEOsuLjcqzJQa5JQG0jbiMPsuv3ufa7e9tvazOQGAPQa0tv0uv1vvIkTvLOuNfGuRvfO2l9xLOOblrhweTyLipgqtgaxwHnRsFgkmAGkNwj1QvIsEnuKzdQBdf1Uvr)wPgUkuhxfelxcpxjz6sDDO02bi57afnEGcNhOQ1RevSFr1g(otcaa7ZL9Oy169PecAHtWmjgBabWCoa3YbtRoKdbTmD2dWOD(jb2GhtRYlN18YdVCpuNa3W7IdNeE09aqoVBFNa3W7IdNeE09aqaamK4otIT3lVn8Uy9jgEKTtSRbW5bgGdgqFbSd4bNKhKtavsySdFN9yG51Ny4sobITOyC2tSlbpaudyz4ei2IIXzFySWWYiZ54CGzWVmwTAngNyEC2R8TDceBrX4SbmSNym2NacaGHmciNRgWdG969PVmKrMTZJXcdVYxg(YWxgsCjsIKvzvIlHKqYuzMmqYeYOAlr(YqwTLr4ldzylt9LHSIlrsCBNa3W7cN3BDCV2sKVm8LHeHKijAHSkrHexgP2obUH3foRJ7nDiJmFzidBzK6ldjUejR2YuFziJW2ww9LHVmK4vjsg2sKVmKHTmZxgYWwM6ldzTkrYW2jWn8UW59wh1HTe3xg(YqIYSLiFBzMVmKjKijiBjiFziHSLP(YqgijsgvBzu9TLbKVTms9LHeY2jWn8UWzDKoUxBjKVm8LHeHlrseKSkrvBzSWxgYW2jWn8UW59ExQoSLz(YW3wM5Blt4ldzyldq(2Yi1xgYesKeKSkZSDcCdVlCwh3BDit9LHmsLizaY2wMWxg(YqwRsKSIlRYkYwI8LHeYwM5ldzQTmQ(2YaY32jWn8UW59whPdBjiFz4B7e4gEx4SoU37vIcFzidBzMVTma5BBlt9L4(YqIlrYmzvIK4sqsizvMjdzcjKeKmHTeYxgYqIKizvMzlZ8LHmsTLG8TLOf(YqIKiziRYmjUeY2jWn8UW59MUuDylJf(siFzitirsq2YmFzirlSLG8LHmsTLOf(2obUH3foRJ64ETLr4lH8LHexIKvBzMVmKrcBjiFBjAHVmKvBNa3W7cNjJ7ToSLbYxc5ldjKTmZxgYaKTeKVmKbiBjAHVmK42obUH3foV364ETLr1xIq(Yqg2obUH3foRJ7nDyldCFjKVmKPsKmwy7e4gEx48ERJ6qIw4ldjijsMWwM5ldjcjrsuyBldiFzG7ldzGSLr1xgYe2siFzidKejJW2jWn8UWzDKoUxza5ldjYwM5ldjQABlJmFz4Blr(2siFBzMVTmQ(YqMAldCFzirsKmcBza5ldjUTtGB4DHZ79UuDylJe(Ya3xgYqIKXcBzu9LHmSLbKVmKHejHSDcCdVlCwh3BDyldq(Ya33wgvFBjKVTtGB4DHZ7ToshYiHVmKHTmG8TLz(YqIGKijkZ2wgP(Ya3xgYesKeKSktL4sCjKesMjZSLz(YqIsLijcKTtGB4DHZ64EVxBjAHVev9LHmSDcCdVlCEVPlvhseUVmKzsKejRsqsCzvcjdzMexMqcjbjtylJuFBzQVTTTZI13(aDVRg9kFz4BBB7emhdmjdNaS(ExdelCdEzSW5EPL1ayVYxg(obWxgYmugyrjaHcOu8fiKejbCeeoyZGaHNMiDrwAczvgsCpsc58OI1NyKxEmwy48YiVS35Ln4wVkVemtcdNxM8eG8smk2ypoVe7X5LGBumYl7DE5sjx35LaSE14eJKymwz780JSLiFNa4ldzwubleQUapQbeKejbC0ciWMg1aeknnbEQSkdjUhjHCEasc(8YZXaG8YENxcWaoj4Zlpglm86tmYlp0SAEj2ZEnCEjCYEuKxcW44XjaRpXiVCFMx2GBKxECYUydB780JSLvFNa4ldjeooytSOMHsr4GGKijGJQGaBkoEgugeouQSkdjUhjHCEq7I8YJXcdNxMLxI5KyAKxUcBXiVe8BS5LDYtmLxEtwKxoo3yXaC5L3InMZlxAVAvEzVZlp3DE5syV38YgCJ8YL)6b2ECM8STDE6r222ka',
    },
  ],
  strt: [
    {
      mdt: 'dSJFiaakkKQtrrf3svk2LQunma1XOAzO6zqnnk11uuBtr8niACiY5GWbPquluvspKIQAIuiCrvjYhPKOrsjHtsjPvQkLUjfszNKFsHedfGSukQYtrzQGUkfsARuiYxvLO2RmyiDykyXuuESkmzkYLrAZQ0NPeJgaDAvXQPOsVgaMnq3gq2Tk63kmCkulxv9CfPPR01ruBNskFNsQgVQeopa1(r48GXmyY040ir)tFgNP5zGJz65EFoidUao5ZXw6l2yqdhlGbWucugMafqgvRmgqMEcg7(PuaoanL8y3pLcWbOP3oEoPMYSyMrTq(b850sYBJDmahFazaKUl1QN3rWyhdWXhqgaP7sTQPxKSJzG8om)b44)CAPxBJr(XuSx(TM)lbydazow)LWXSMbqY0GXwkfONtlzwSdY)p9CzKndKAnkyYJDq()PNlGidcMCsXONuGaSrE60hlNarp3PbBJDq()PNRrq(0cDCAvtViHrgBkfKESpJZGjp5KAJzmzqWPbtEWKhm5jpXt8eorkzNq0M4btEYBJDmah)y3lMEVTjEWKhm5jKjEAsBchm5jEIN82KDWKN4TP5Gjp5TPjbBJDmah)yy69IG2MWbtEWKNSBt4GjpHBt2btEc3MMd2MMem5jVnHmyBSJb44h7EXumTnzhm5btEAUnHd2MSdM8KDBAoyYt4epXBtid2g7yao(XWue07TnnhmHmyYtEBSJb44h7EVMHPTPjbtKcM8K3g7yao(XW07ftBtidg7yao(XUxmfbnHiyYtEIN4TTjsbtUhm5jpXt8eozNSt42KdCWKN82yhdWXpgMEV3BBcrWyhdWXp29IWmmnXNdM8K3M4tcM8K3M85GTjUDWKN822KdCWKBhm5jVn54GjpXt8K3g7yao(XWum9EtopyYt4epzNWjpzN4TTj3dM4icM8K3M4KcM8KN4jEBIJmyYt8epHt4K3g7yao(Xm43lMMCEWKNqM4PjTTjNhmH5btEYBtCebtEIN4jCBItkyYt4epz3M4idM80KepzNWP5KDczBSJb44h7EX07Tn54GjmWbtEYBJDmah)yy69IG2MC7Gj8CWKNqM4jsjCcrYonNMttAtyKbtEYBJDmah)y3lMIPTjFoycBhm5jVnHNdM8epXt2jCc3g7yao(XWue07Tn5tcMW2btEIN4jCBcphm5jhN4jpHtoWj7KZtZj3BtyKbtEI3g7yao(XU3RzyABYrgmXXbtEYBtCpyYtEIN4TjoWbtEYt8epHt42yhdWXpgMEVyAIZdM8KN4jEBBYjfmH9Gjp5TXogGJFS7ftrqBBJ9FURr5ENs3PbtEW222ywNsbqYJzDdwgw1iIbKXMl7AeNwSYydZmx6XonyYdgZuWKNWZa)(KzhyohHnW2EINEJncsVpJabNtAYeBhNWjpz3RP5ywHbRrjqDcuJbnay6NaDhKpaib6cWNPeOMgJpbQjY)NtleOgtgeKaLeb6oiq3)Jfl0pbQrJEAWc9)qjqnpa1g7SxBt8GXmfm5joFY7iWiNGWTjHXZjE6n8z)DGrsAInjosospHtEYUxtZXScdwJsG6eOgdAaW0pb6N8jbkaPFkbQjY)NtleOgtgeKa1Dc0DqGU)hlwOFcuGm8baDjqnpa1g7SxBt4GXmfm5jhj(Dey(mEgJjrIuINEdM087iMGCgyBsiXZjCYt29AAo2BjdKXeOJZDqG(n8a(CAHa1WPjc0dWNdaqGUuqQXJ)s)eO3)aicuGm8cc0VHtluc0DqGofapgtGc0Z5dbQzJPtjqn60NfG0pb60htucuRp(ayQ50g7SxBBBla',
    },
  ],
}

async function convertRouteDefinition({
  difficulty,
  name,
  mdt,
}: SampleRouteDefinition): Promise<SampleRoute> {
  const mdtRoute = await decodeRoute(mdt)
  const route = mdtRouteToRoute(mdtRoute)

  if (name) route.name = name

  return {
    difficulty,
    route,
  }
}

export type SampleRoutes = Record<DungeonKey, SampleRoute[]>

const sampleRoutes = dungeonKeys.reduce((acc, key) => {
  acc[key as DungeonKey] = []
  return acc
}, {} as SampleRoutes)

const difficultyToNum = (difficulty: SampleRoute['difficulty']) =>
  difficulty === undefined
    ? 0
    : difficulty === 'beginner'
      ? 1
      : difficulty === 'intermediate'
        ? 2
        : 3

const wclRankingToNum = (wclRanking: SampleRoute['wclRanking']) =>
  wclRanking === undefined ? -Infinity : wclRanking.rank

function sortSampleRoutes(route1: SampleRoute, route2: SampleRoute) {
  if (route1.wclRanking !== route2.wclRanking) {
    return wclRankingToNum(route1.wclRanking) - wclRankingToNum(route2.wclRanking)
  }

  if (route1.difficulty !== route2.difficulty) {
    return difficultyToNum(route1.difficulty) - difficultyToNum(route2.difficulty)
  }

  return route1.route.name.localeCompare(route2.route.name)
}

const dirname = getDirname(import.meta.url)

for (const dungeonKey of dungeonKeys) {
  for (const routeDefinition of sampleRouteDefinitions[dungeonKey]) {
    const sampleRoute = await convertRouteDefinition(routeDefinition)
    sampleRoutes[dungeonKey].push(sampleRoute)
  }

  const dungeonFolder = `${dirname}/${dungeonKey}`
  if (fs.existsSync(dungeonFolder)) {
    const files = fs.readdirSync(dungeonFolder)
    for (const file of files) {
      const sampleRoute = JSON.parse(
        fs.readFileSync(path.join(dungeonFolder, file)).toString(),
      ) as SampleRoute
      sampleRoutes[dungeonKey].push(sampleRoute)
    }
  }

  sampleRoutes[dungeonKey].sort(sortSampleRoutes)
}

export default async () => ({
  data: sampleRoutes,
})
